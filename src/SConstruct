#!/usr/bin/python
# Copyright (c) 2013 Steven Pelley
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so, 
# subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all 
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

env = Environment()
# for clang color if using gnu screen or terminal emulation
import os
env['ENV']['TERM'] = os.environ['TERM']

debug = ARGUMENTS.get('debug', 0)
if int(debug):
  env.Append(CCFLAGS = ['-g', '-O0'])

cppdefines = []
for key, value in ARGLIST:
  if key == 'define':
    cppdefines.append(value)
    env.Append(CPPDEFINES=cppdefines)

env_annotation = env.Clone()
annotation_lib = env_annotation.Library('annotation', 'annotation.cpp')

env_inc = env.Clone(CCFLAGS = '-pthread', LIBS='pthread')
env_inc.Append(LIBS = [annotation_lib])
env_inc.Program('inc.cpp')

env_inc_cas = env.Clone(CCFLAGS = '-pthread', LIBS='pthread')
env_inc_cas.Append(LIBS = [annotation_lib])
env_inc_cas.Program('inc_cas.cpp')

env_merge = env.Clone()
env_merge.Program(['merge.cpp'])
